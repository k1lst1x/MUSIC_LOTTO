"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import logging
from logging.handlers import RotatingFileHandler

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i^zl6tox_sqq&j_oa^o*a$v0zz&29d^*=7d01wc)pp!51)y9im'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'users.User'
LOGIN_URL = '/users/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'lotto',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

STATIC_ROOT = "staticfiles"

MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')
MEDIA_URL = '/uploads/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    # Основное
    "site_title": "MUSIC BINGO",
    "site_header": "MUSIC BINGO Панель управления",
    "site_brand": "MUSIC BINGO Admin",
    "site_logo": "/MUSIC_LOTTO.png",  # Логотип
    "site_logo_classes": "img-responsive shadow-sm",  # Классы оформления логотипа
    "site_logo_width": "128px",  # Ширина логотипа
    "site_logo_height": "auto",  # Пропорциональная высота
    "welcome_sign": "Добро пожаловать в административный раздел MUSIC BINGO",
    "copyright": "MUSIC BINGO © 2025",

    # Верхнее меню
    "topmenu_links": [
        {"name": "На сайт", "url": "/", "icon": "fas fa-globe"},  # Переход на главную сайта
    ],

    # Боковая панель
    "show_sidebar": True,
    "navigation_expanded": True,
    "custom_links": {
        "my_app": [
            {"name": "Статистика", "url": "/admin/my_app/report/", "icon": "fas fa-chart-bar"},
        ]
    },

    # Подключение кастомного CSS для стилизации
    "custom_css": "admin/custom.css",
    "custom_js": None,

    # Настройки интерфейса
    "ui_tweaks": {
        "theme": "darkly",  # Темная тема
        "dark_mode": True,  # Включение темного режима
        "navbar": "navbar-dark",  # Темный верхний бар
        "sidebar": "sidebar-dark-custom",  # Темная боковая панель
        "accent": "accent-custom",  # Пользовательский акцент
        "navbar_fixed": True,  # Закрепленный верхний бар
        "sidebar_fixed": True,  # Закрепленная боковая панель
        "body_small_text": True,  # Более мелкий текст
        "footer_small_text": True,
        "layout_boxed": False,  # Отключенный боксированный режим
    },
}

JAZZMIN_UI_TWEAKS = {
    "theme": "flatly",  # Основная тема оформления
    "dark_mode": True,
    "dark_mode_theme": "cyborg",  # Тема для темного режима
    "body_small_text": True,
    "navbar": "navbar-dark bg-dark",  # Верхняя панель - черная
    "sidebar": "sidebar-dark-primary",  # Боковая панель - тёмная
    "brand_colour": "navbar-dark",  # Цвет бренда
    "navbar_fixed": True,  # Закрепленный верхний бар
    "sidebar_fixed": True,  # Закрепленная боковая панель
    "footer_fixed": False,  # Не закреплять футер
    "layout_boxed": False,  # Не использовать боксированную компоновку
    "footer_small_text": True,
    "accent": "accent-black",  # Черный акцент
    "button_classes": {
        "primary": "btn-custom-dark",  # Кастомный стиль кнопок
        "secondary": "btn-outline-light",  # Альтернативный стиль кнопок
    },
}

# Настройки логов
LOG_DIR = os.path.join(BASE_DIR, 'django_logs')
os.makedirs(LOG_DIR, exist_ok=True)

# 30 MB на файл, 3 бэкапа - 4 итог
MAX_LOG_SIZE = 30 * 1024 * 1024
LOG_BACKUPS = 2

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'verbose': {
            'format': '%(asctime)s [%(levelname)s] %(name)s %(pathname)s:%(lineno)d\n%(message)s'
        },
        'simple': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
        'django_simple': {
            'format': '[%(levelname)s] %(name)s %(message)s'
        },
        'sql_formatter': {
            'format': '%(asctime)s [SQL] %(message)s'
        },
    },
    'handlers': {
        # Файл ошибок (только WARNING и выше)
        'error_file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'errors.log'),
            'formatter': 'verbose',
            'maxBytes': MAX_LOG_SIZE,
            'backupCount': LOG_BACKUPS,
            'encoding': 'utf-8',
        },
        # Основной файловый лог (INFO и выше)
        'info_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, 'info.log'),
            'formatter': 'simple',
            'maxBytes': MAX_LOG_SIZE,
            'backupCount': LOG_BACKUPS,
            'encoding': 'utf-8',
        },
        # Консоль для Django (только INFO+)
        'django_console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'django_simple',
        },
        # Консоль для debug (только в DEBUG режиме)
        'debug_console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['require_debug_true'],
        },
    },
    'loggers': {
        # Логгер Django по умолчанию
        'django': {
            'handlers': ['info_file', 'error_file', 'django_console'],
            'level': 'INFO',
            'propagate': False,
        },
        # Логи сервера разработки
        'django.server': {
            'handlers': ['django_console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['info_file', 'error_file', 'debug_console'],
        'level': 'DEBUG',
    },
}
